第2章.Firebirdの概要
第1章でFirebirdというデータベースがどのような経緯で生まれ、製品の取り巻く環境について説明しました。第2章ではFirebirdの製品概要について説明していきましょう。

2-1.Firebirdの特徴
第1章にてFirebirdの特徴について説明しましたが、すでに説明したようにFirebirdはFirebird Version 6.0が提供しているすべての特徴を継承しており、管理効率の高いデータベースとなっています。Firebirdの提供している機能について確認してみましょう。
Firebirdの特徴は次のようになっています。

	a)SQL-92,SQL-99準拠
	SQL-92エントリレベルに準拠しているだけでなく、SQL-3と呼ばれていた新しいSQLの規格であるSQL-99の一部の仕様に対応している標準に準拠したリレーショナルデータベースです。

	b)トリガー、ストアドプロシージャなどのアクティブデータベース機能
	テーブルに対してINSERT・DELETE・UPDATE処理を行うタイミングで何らかのデータ処理を実現できるトリガー機能やサーバサイドでデータ処理を実現できるストアドプロシージャ機能を用意しているため、クライアント再度のデータ処理を軽減し、Firebirdの効率的なメモリマネージメント配下においてデータ処理を行うことができます。

c)Blob型、多次元配列のサポート
	テキスト形式のBlob(Binary Large Object)だけでなく、バイナリ形式のファイルを保存できるデータ型を持っています。また、Blob型ではサブタイプの設定が可能で、ユーザー定義のサブタイプを利用することでBlob型に保存されたデータ型のフォーマットを管理することができます。
	16次元までの多次元配列をサポートしており、科学技術計算などのデータを効率良く管理することができます。

d)マルチ言語のサポート（列ごとに言語を選択可能）
	データベース、テーブルだけでなく、各列ごとにキャラクターセットを設定することができます。一般のデータベースではなかなか管理できない多国語データの管理を同一のテーブル内で行うことができます。

e)行ロックを超えたロッキングアーキテクチャーの採用（履歴型アーキテクチャ）
	一般的にリレーショナルデータベースはSELECT文を処理している場合でも読みとりロックが発生します。しかし、Firebirdはデータを履歴として管理しているため、他のトランザクション処理が行われる最中であっても、同一データに対してのSELECT文の処理を実行することができます。

f)ユーザー定義関数（UDF)のサポート
	デフォルトで組み込まれている関数以外に、ユーザー定義関数(User Define Function)と呼ばれるユーザーが独自で関数を作成することができます。Windows環境ではC++だけでなく、DelphiやC++Builderを利用して関数を作成することができます。また、Linux環境ではKylixを使用してユーザー定義関数を作成することができます。

g)クライアントにイベントを通知するイベントアラータ
	Firebirdにはイベントアラータと呼ばれるデータの更新をクライアントに伝える機能があります（図2-1-1)。このイベントアラータ機能により、クライアントはポーティングを行うことなく、データ処理を知ることができます。ポーティングはネットワークトラフィックを増加させることだけでなく、無駄なデータ処理が増えるためサーバー負荷が増大します。Firebirdはこのイベントアラータ機能により、これらのネットワーク負荷とサーバー負荷を軽減することができます。

図2-1-1.イベントアラータ機能
(fig2-1-1.bmp)

h)ガーベージコレクション機能
	Firebirdはデータの削除などで空いたスペースを一番後ろの領域に回して再利用できるようにしています。この処理をガーベージコレクションといい、データ領域を効率良く使用できるようになっています。

i)チューニングレスで最高のパフォーマンスを実現するクエリオプティマイザ機能
	一般的にリレーショナルデータベースには割り当てるメモリ量やディスク領域などの設定が可能なチューニングパラメータが用意されています。このチューニングパラメータを設定することにより、問い合わせのパフォーマンスを向上させることができます。また、クエリ時のパラメータ設定によりクエリのパフォーマンスを改善することができるようになっています。しかし、Firebirdにはチューニングパラメータというものがありません。代わりにオプティマイザ機能が用意されており、一番効率のよくパフォーマンスが最適となる問い合わせができる機能が用意されています。

j)データベースのミラーリングを行うシャドウデータベース機能
	データベースの信頼性を高める機能としてデータベースのミラーを作成するシャドウデータベースという機能があります（図2-1-2)。シャドウを設定するSQL文を実行することでシャドウデータベースを作成することができます。この機能を利用することでRAIDなどを使用することなくシステムの信頼性を高めることができます。マスターデータベースとシャドウデータベースへの書き込みはFirebirdのサーバープロセスによって自動的に行われます。Firebirdには自動ツーフェーズコミットという機能があり、アクティブのトランザクションが複数のデータベースにまたがる場合、Firebirdが自動的にツーフェーズコミットモードに入り、複数のデータベースの一貫性を保ちます。こちらの機能を利用するために特別のコードや設定を行う必要はありません。この機能はシャドウデータベースへの書き込み時にも使用され、ツーフェーズコミットを利用することにより、マスターデータベースとシャドウデータベースの一貫性を保つことができるようになっています。

図2-1-2.シャドウデータベース
（fig2-1-2.bmp)

k)オンラインバックアップ機能
通常、リレーショナルデータベースはオンラインバックアップ機能を製品自体では提供していません。サードパーティ製品を利用することでオンラインバックアップを実現しています。しかし、Firebirdは履歴型アーキテクチャを採用しているため、データの閲覧で読みとりロックが発生しないため、簡単にオンラインでバックアップを取ることができます。そのため、サーバーのメンテナンスを行うことなく、付属するツールを利用してオンラインバックアップを取ることができます。

すでに説明したようにFirebirdはいかに効率よりデータベースの管理ができるかということを前提に開発されているリレーショナルデータベースです。これらの機能が提供されていることにより、商用アプリケーションパッケージの組み込みエンジンとしてや、サーバー管理者のいない支店や営業所で使われる基幹系システムのデータベースとして全世界で利用されているのです。上記で説明した各機能の詳細については別途説明していきます。

2-2.周辺ツールについて
Firebirdにはサーバー状態、ユーザー管理、データベースのバックアップ／リストア、SQLによりデータ操作を行うための付属ツールがついております。コマンドラインのものとWindowsで使用できるGUIのものの2種類があります。GUIのものの方がとっつきやすいですが、システムを運用後はリモートマシンからtelnetで使えるコマンドラインツールの方が何かと便利だと思いますので、最初は使いづらいですがコマンドラインツールについても慣れておくのがいいでしょう。
各ツールの使い方について簡単に説明します。

2-2-1.IBConsole
IBConsoleは、Firebirdのローカルあるいはリモートデータベースとサーバーを管理するWindowsアプリケーションです。IBConsoleはクライアントまたはサーバーとなるWindows 98/Me、Windows NT 4.0/2000上で動作し、Firebirdの稼動するすべてのプラットホーム上のFirebirdサーバーおよびデータベースを管理します。IBConsoleで実行できることは次のとおりです。

・サーバーのセキュリティ管理： 新規のユーザーの登録、ユーザーパスワードの変更、ユーザーの削除
・データベースの作成と登録処理
・データベースのバックアップと復元
・データベース保守機能の実行： データベースの整合性の検査、破損したデータベースの修復、データベースのスイープ、limboトランザクションのリカバリ
・データベースのロック状態の表示
・データベースのシャットダウンと再起動
・SQL文によるデータ操作
注：括弧内は同じ操作をコマンドラインツールで行った場合のツール名

図2-2-1-1.IBConsole
(fig2-2-1-1.bmp)

IBConsoleはデータベース管理とサーバー管理、SQL文によるデータ操作ができる統合管理ツールです。InterBase Version 6.0以前はServer ManagerとWISQLに分けられていた機能がInterBase Version 6.0およびFirebirdから一つのツールに統合されています。コマンドラインツールでもIBConsoleが提供されているすべての機能が用意されていますが、コマンドラインの場合では単機能が１コマンドとなっています。ではIBConsoleの基本的な機能についてみていきましょう。詳細な使い方については実際にインストールを行った後で説明していきます。
-サーバー管理
IBConsoleを使うことで複数のFirebirdサーバーを一度に管理していくことができ、それぞれのサーバーの状態、ユーザー管理、ロックマネージャの状態の調査を行うことができるようになっています。また、登録されているサーバーで稼働しているInterBaseおよびFirebirdのバージョンをIBConsoleから管理できるようになっています。図の2-2-1-1では一つのデータベースしか選択していませんが、複数のサーバー、複数のデータベースを選択することができます。

-ユーザー管理
IBConsoleを使用することで各サーバーのユーザーを管理することができます。Linux版のFirebirdではFirebirdのセキュリティとOSのグループが統合されており、GRANT構文を使用して特定のグループに書き込み権限を与えるなどの処理を行うことができます。例えば、コマンドラインツールでユーザー管理を行うgsecを実行できるのはLinuxのスーパーユーザーかSYSDBAだけですが、root権限を持っているユーザーであれば実行することができます。この機能はWindows版には用意されていないものです。ただし、統合されているのはセキュリティ機能ですのでFirebirdにログインするためのユーザーは作成しなければなりません。

-データベースのバックアップ／リストア
IBConsoleを使用することでデータベースのバックアップ／リストアを行うことができます。Firebirdのバックアップは一つのトランザクションとして動きますので他のユーザーがトランザクションの実行中であってもバックアップ処理を行うことができます（オンラインバックアップが可能）。ただし、バックアップ開始後に他のユーザーが開始したトランザクションについては反映されません。また、Firebirdはマルチファイルの一部だけのバックアップや特定のテーブルだけのバックアップなどの部分的なバックアップはサポートされていません。すべてのファイルをバックアップするかまったくしないかです。
Firebirdは2次ファイルという複数のファイルにデータを格納する方式を明示的に選択しない限り、データベースが一つのファイルになりますので、ファイルのコピーを作成してバックアップを取ることもできますが、ユーティリティを使用する方が他まざまな利点があります。
バックアップとリストア（バックアップの復元）を行うことで次のようなことが実現できます。

・古いレコードのガーベージコレクションやインデックスの調整などによって、データベースのパフォーマンスが向上します。
・削除したレコードで占用されていたスペースを利用できるようにし、残りのデータを圧縮します。データベースのサイズを小さくすることができます。
・データベースのページサイズ（最小I/O単位)を変更したり、データベースを複数のファイルやディスクに分散したりすることができます。
・バックアップを取ることで、異なるバージョンや異なるプラットホームへのデータの移行が可能になります。・バックアップ／リストアを行うことでODS(オンディスク構造体)のアップグレードが可能です。FirebirdおよびInterBaseは各バージョンでそれぞれ異なるODSを使用しています。FirebirdまたはInterBaseのバージョンアップを行う場合は、旧バージョンでバックアップを取り、新バージョンでリストアすることでODSをアップグレードすることができます。ODSをアップグレードしない限り最新の機能は使用できませんので、FirebirdまたはInterBaseをバージョンアップするときは必ず旧バージョンでのバックアップ、新バージョンでのリストアを行うようにしてください。Firebirdのバックアップ機能では次のようなバックアップ形式および機能を提供しています。

・移行可能な形式
バックアップを実行したマシンから別のオペレーティングシステムのマシンにデータベースを移動するためには、［移行可能な形式］オプションをチェックします。このオプションを使うと、データが汎用形式で出力され、Firebirdをサポートするすべてのマシンで復元できます。
・メタデータのみのバックアップ
データベースをバックアップするときに、データを除いて、メタデータだけを保存することができます。これは、次の目的のために行います。
  *変更される前のメタデータのレコードを保存する。
  *データベースの空のコピーを作成する。メタデータは同じですが，別のデータを入力用。
・ガーベージコレクションを使用不可にする
デフォルトでは，IBConsoleはバックアップ中にガーベージコレクションを行います。バックアップ中にガーベージコレクションを禁止したい場合にこのオプションを選択します。ガーベージコレクションにより、データレコードの旧バージョンで使用されている領域が再利用のために解放されるようマークされます。一般的には、バックアップ中にガーベージコレクションを行うようにします。しかし、旧レコードにデータ損傷がある場合は、バックアップ中にこれらのレコードにアクセスすることを避けるため、ガーベージコレクションを行わないこのオプションを選択します。
・limboトランザクションの無視
バックアップでlimboトランザクションを無視するにはこのオプションを選びます。バックアップでlimboトランザクションを無視すると、limboトランザクションで作成されたすべてのレコードが無視され、最後にコミットされたレコードのバージョンが検索され、そのバージョンがバックアップされます。limboトランザクションは2相コミットが失敗したときに作成されます。システム障害や単一データベーストランザクションが準備されたときにも作成されます。limboトランザクションを含んでいるデータベースをバックアップする前に、データベース保守ウィンドウの［保守｜トランザクションのリカバリ］を選択して、トランザクションのリカバリを行うようにしてください。
・チェックサムの無視
バックアップでチェックサムを無視するにはこのオプションを選びます。チェックサムは、ページごとにデータを解析してデータの整合性を検査するものです。不良チェックサムとは、システム障害などでデータページがランダムに上書きされている状態をいいます。チェックサムエラーは、データに損傷があることを示します。不良チェックサムが検索された場合、通常はデータベースのバックアップは行われません。次回データベースを復元するときに、データを調べてください。
・処理経過の出力
バックアップ処理を監視するためには，このオプションを選びます。このオプションを選択すると、標準テキスト表示ウィンドウが開き、ステータスメッセージが表示され、バックアップ実行中の状況を確認することができます。


また、バックアップと同様にデータベースの復元（レストア）を行うこともできます。このときに次のような指定をすることができます。

・ページサイズ
Firebirdでは，1024，2048，4096，および8192バイトのデータベースページサイズをサポートします。ページサイズを変更するには、データベース復元ダイアログのページサイズフィールドの値を変更し、データベースをバックアップしてからそれを復元します。次のような理由から、ページサイズを変更することによって処理能力を向上させることができます。
a)BLOB全体が1つのデータベースページに相当するとき、BLOBデータの格納と検索はもっとも効率がよくなる。アプリケーションで1KBより大きなBLOBを多く保存する場合は、より大きなページサイズを使用すればBLOBデータアクセスの時間を短縮できる。
b)行が複数ページにまたがらないと、Firebirdはより効率よく実行できる。長い行のデータを含んでいる場合は、ページサイズを大きくした方がよい。
c)データベースのインデックスサイズが大きい場合は、データベースページサイズを大きくすればインデックスツリーのレベル数は少なくできる。ツリーレベルの数が最小に維持されればインデックス操作の速度が高まる。d)ほとんどのトランザクションが数行のデータしか含んでいない場合は、データの移動がなく、ディスクキャッシュでのメモリ使用も少ないため、ページサイズを小さくする。

・既存のデータベースを上書き
このオプションが選択されていない場合、IBConsoleは既存のデータベースファイルを上書きすることはできません。既存のデータベース名で復元しようとしても、このオプションが選択されていなければ、復元は先に進みません。既存のファイル名で上書きを行いたい場合は、他のクライアントからのアクセスが起きる可能性を考慮して、このオプションを使うよりも既存のデータベースを削除しておくかあるいはリネームしてからデータベースの復元を行う必要があります。

・各テーブルの後にコミットする
通常は、データが復元される前に、すべてのメタデータが復元されますが、このオプションを使用すると、IBConsoleは各テーブルのメタデータとデータを同時に復元し、テーブルごとにコミットします。たとえば、データの損傷や整合性制約違反がある場合など、バックアップファイルの復元中にトラブルが発生した場合に、このオプションを使用します。バックアップファイルに問題がある場合に、データベーステーブルを復元すると、データのいくつかを元に戻せます。不良データより前にあるテーブルだけを復元できます。不良データが見つかった時点で、復元は失敗に終わります。

・インデックスを無効にする
通常、データベースが復元されるときにインデックスは再作成されます。データベースがバックアップされるときに、インデックスに重複した値が含まれていた場合、復元は失敗に終わります。インデックスが一時的に無効にされた場合（たとえば，多くのレコードを挿入したり、インデックスを再調整したりした場合）、重複した値がデータベースに取り込まれることがあります。このような場合に復元を成功させるためには、このオプションを選択します。これによってインデックスを無効にし、インデックスを再作成できないようにします。

・検査条件を復元しない
データがすでに入力されているデータベースで制約を再定義した場合、データが制約を満たさなくなっていることがあります。これは、データベースを復元するときに無効データのエラーが出るまで発見できない場合があります。無効データを含んでいるデータベースを復元するには、このオプションを選択します。このオプションは、メタデータから制約を削除します。データベースが復元された後、新しい整合性制約に従ってそのデータを正しく変更し、削除された条件を元に戻します。
このオプションは、データベースを復元した後に制約を再定義する場合にも使用できます。制約を再定義する場合は、その後すべてのデータをテストしてください。

・処理経過の出力
復元処理の実行を監視するには、このオプションを選びます。このオプションを選択すると、標準テキスト表示ウィンドウが開き、ウィンドウに状態メッセージが表示されます。

データベースのバックアップはシステムを安定稼働する上で必要不可欠なものです。バックアップを定期的に行いたいのであれば、バックアップ機能を提供するコマンドラインのgbakを使用するのがいいでしょう。Windowsプラットホームであれば、ATコマンドやタスクスケジューラなどを利用して、LinuxなどのUNIXプラットフォームなどではcronなどを利用してデータベースのバックアップのスケジューリングを行うことができます。

-データベース管理
IBConsoleを利用することでデータベースの状態を調べることができます。データベースの状態とは格納されているテーブルやインデックスの状態、ガーベージコレクションによる空き領域の状況などを表示します。また、データベースの状態の確認、解析を行うことでシステムの信頼性やパフォーマンスを調べることができます。また、これ以外にも検索時にどのインデックスが使用されているかどうかを調べる方法などもFirebirdには用意されています。これらの機能をうまく活用してデータベースを最適な状態にすることが可能です。

-データベースの検査
システムを運用していると、データベースに対して以下のような小さな問題を引き起こす出来事が発生することがあります。このような状況のときにデータベースの検査と修復を行うことができます。

a)データベースアプリケーションの異常終了。これはデータベースの整合性には影響しません。アプリケーションが終了するとき、コミットされたデータは保存されますがコミットされていない変更はロールバックされます。実行されていない変更のために1つのデータページをすでに割り当てている場合は、そのページは孤立ページと考えることができます。孤立ページは空き領域に戻される未割り当てのディスク領域です。
b)オペレーティングシステムまたはハードウェアでの書き込みエラー。これらは通常、データの整合性の問題を引き起こします。書き込みエラーによって、データページやインデックスなどのデータ構造が壊れたり失われたりします。これらのデータベース構造の破損によって、コミットされたデータは修復不能になります。
これらの現象が発生したとき及び以下のようなときは、データベースを検査する必要があります。
c)データベースのバックアップが成功しないとき
d)アプリケーションでデータベース破損エラーが発生するとき
e)データ構造の破損、または割り当ての不適切な領域を定期的に点検するとき
f)データ破損の疑いがあるとき

-SQL文によるデータ操作(Interactive SQL)
InterBase Version 6.0以前はWindows ISQL(WISQL)というツールにて提供されていたSQL文にてデータ操作を行う機能であるInteractive SQLがIBConsoleに統合されています（図2-2-1-2)。また、テーブルのフィールド構造やデータなどを閲覧できる機能が提供されています（図2-2-1-3)。

図2-2-1-2.SQL文によるデータ操作
(fig2-2-1-2.bmp)

図2-2-1-3.フィールド構造の閲覧
(fig2-2-1-3.bmp)


2-2-2.gsec
gsecはユーザーの登録・削除・編集を行うコマンドラインツールです。IBConsoleの[Server]メニューで提供されている機能と全く一緒です。
InterBase Version 6.0以前ではユーザー管理機能はGUIツールのServer Managerかコマンドラインツールのgsecを使用しなければなりませんでしたが、InterBase Version 6.0およびFirebirdではAPIを利用してユーザーの登録・削除・編集ができるようになりました。そのため、より柔軟にアプリケーションからサーバーの管理を実現できるようになっています。


2-2-3.gbak
gbakはコマンドラインで使用するデータベースのバックアップおよび復元（レストア）ツールです。cronやATコマンドを利用して定期的なデータベースのバックアップを行う場合はこちらのツールが非常に便利です。IBConsoleの[Database]メニューで提供されているデータベースのメンテナンス機能およびバックアップ・復元機能と全く一緒です。
また、InterBase Version 6.0以前ではできなかった復元時のページサイズの設定ができるようになっています。また、２次ファイルを使用しているデータベースでも問題なくバックアップが取れるようになっています。


2-2-4.gfix
gfixはコマンドラインで使用するデータベースの検査・修復ツールです。IBConsoleの[Database]メニューにもまったく同じ機能が用意されています。
修復を行う場合は一度データベースのコピーを行ってから、検査を行い修復を行います。サーバーへのアクセスがあるタイミングでマシンが異常終了した場合などではこちらのツールを利用して修復を行う必要があります。

2-2-5.gstat
gstatはコマンドラインで使用するデータベースの状態を確認するツールです。インデックスが効率的につけられているかどうかなどの確認を行えるだけでなく、ページサイズが妥当であるかどうかを判断することができます。IBConsoleの[Database]メニューの[View Metadata]が全く同じ機能を提供しています。


2-2-6.isql
isqlはコマンドラインで使用するSQL文によるデータ操作を行うツールです。IBConsoleのInteractive SQLが同様の機能を提供しています。isqlの場合、SQL文が書かれたSQLファイルを指定して実行することができますので、データの大量の投入やスキーマファイルの作成時に利用することができます。

2-2-7.gpre
gpreはプリプロセッサです。InteBase Version 6.0以前は各言語ごとに有償の機能でしたが、Firebirdの登場により、埋め込みSQLをコストをかけることなく使用できるようになりました。サポートしている言語はC/C++,COBOL,PASCAL,FORTRANとなっています。ただし、Firebirdプロジェクトでは積極的にプリプロセッサの開発は行っていませんので、旧バージョンのInterBaseをFirebirdに移行するときなどに使用する場合に利用することになるでしょう。


2-3.対応しているミドルウェアについて
Firebirdは対応しているミドルウェアが多い製品です。これはもともとFirebirdがボーランド社のInterBaseから生まれているからで、ボーランド社の提供しているさまざまな開発ツールとの高い親和性があるだけでなく、Perl、Python、PHPなどのオープンソースのスクリプト言語から利用することができるようになっています。サポートされているミドルウェアは次のようになっています。

	・InterClient-------JDBCタイプ3形式のミドルウェア
	・IBExpress---------Delphi,C++Builder,Kylixから使用できるAPIを直接呼び出せるコンポーネント
	・ODBC--------------オープンソース版と製品版の２種類有り
	・PHPLib for InterBase --- PHPからInterBaseおよびFirebirdを利用できるライブラリ
	・Zope Driver for InterBase --- Zopeサーバーから利用できるInterBaseおよびFirebirdのドライバ
	・Kinterbasdb ------Python言語でInterBase APIをバイディングしたドライバ
	・DBD::InterBase----InterBaseおよびFirebirdに対応したPerlのDBIドライバ

上記以外でもさまざまなミドルウェアや役に立つツールが数多く登場しています。IBPhoenix社のサイトからこれらのツールをダウンロードすることができます。

Firebirdをサポートするミドルウェアの一覧
http://www.ibphoenix.com/main.nfs?a=ibphoenixApp&page=ibp_contrib_download
