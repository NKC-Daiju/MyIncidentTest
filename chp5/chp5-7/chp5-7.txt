5-7.イベントアラータ
イベントアラータはFirebirdの独自の機能で、データ操作が行われたことをイベントとして全クライアントに伝える機能です。イベントアラータを使用することで、データが更新されたかどうかを調べるために常にデータをチェックするようなことは必要ありません。イベントが送られてきたらデータ更新が行われたことが分かるのでそれを待機するだけで済みます。イベントアラータは次のような利点を持っています。
	・データの更新を調べるするためのポーリング用のコードがいらない
	・ポーリングを行わないので余計なトラフィックが発生しない
	・イベントを受け取るかどうかの制御が可能

図5-7-1.イベントアラータの概略図
(fig5-7-1.GIF)

FirebirdではトリガーやストアードプロシージャによってFirebirdのイベントマネージャに渡されるメッセージをイベントといいます。メッセージはINSERT、DELETE、UPDATEなどのデータ操作によって発生し、発生したイベントをイベントマネージャが管理します。メッセージを発生させるには明示的にメッセージを発生させるためのPOST_EVENT文を指定する必要があります。イベントマネージャはメッセージを受け取ると、イベントキューに格納し、そのメッセージを受け取るアプリケーションを登録情報の中から探し出し、該当するアプリケーションにメッセージを送ります。発生したイベントがトランザクションの実行中の場合はコミットされた時点でイベントマネージャに送られます。
イベントを発生させるのは、POST_EVENT文を使用しますが、この文はトリガーかストアドプロシージャ内でのみ指定可能です。このイベントを発生させるトリガーまたはストアドプロシージャをイベントアラータともいいます。
	POST_EVENT <イベント名>;
イベントにはイベント名を指定することができます。このイベント名によってイベントマネージャはアプリケーションに渡すかどうかを判断します。また、アプリケーションがイベントを受け取るかどうかの登録を行うときもこのイベント名を指定します。
アプリケーションで指定されたイベントを受け取れるようにするにはイベントマネージャにEVENT INIT文を使用して登録します。EVENT INIT文は埋め込みSQLでのみ指定可能な構文で、Delphiなどの開発ツールで使用したい場合はAPIを使用してイベントの登録を行います。

	EVENT INITの構文
		EXEC SQL
		EVENT INIT request_name ( event_name);

EVENT INITを実行することでイベントマネージャに登録されますが、これだけではイベントを受け取ることができません。イベントを受け取るにはイベントの待機状態であることをイベントマネージャに知らせるEVENT WAIT文を実行する必要があります。EVENT WAIT文を受け取るとイベントマネージャは該当するイベントがイベントキューに入った場合、アプリケーションにイベントを送るようになります。また、EVENT WAIT文を実行するとアプリケーションは待機状態になります。

Note
Delphi、C++ Builderで使用できるイベントアラータ用のVCLコンポーネントが多数あります。これらのコンポーネントを使用することで簡単にイベントアラータの機能を使用できるようになります。
