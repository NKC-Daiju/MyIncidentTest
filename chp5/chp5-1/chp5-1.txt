第5章 Firebirdのデータベース機能

4章でIBConsoleの使い方が分かりましたので、続いてFirebirdの提供しているデータベース機能を理解して実際にデータ処理ができるようになりましょう。

5-1.サポートするデータ型
Firebirdでテーブルを作成する場合、必ずテーブルは一つ以上のフィールドを持つ必要があり、各フィールドは定められているデータ型にて定義されている必要があります。また、あるデータ型も持つフィールドにはそのデータ型に有効なデータのみ格納されます。そのため、フィールドにはもっとも適したデータ型を設定する必要があります。
Firebirdは、次のデータ型をサポートしています。

・INTEGERおよびSMALLINT
・FLOATおよびDOUBLE PRECISION
・NUMERICおよびDECIMAL
・DATE，TIME，およびTIMESTAMP
・CHARACTERおよびVARCHAR(VARYING CHARACTER)
・BLOB

Firebirdはバイナリラージオブジェクト(BLOB）データ型をサポートしており、標準SQLデータ型には簡単に格納できないデータを格納できるようになっています。BLOB は、ビットマップ形式などのグラフィックィックイメージ、ベクター描画、サウンドファイル、ビデオセグメント、さまざまな長さの文書、あるいはその他のマルチメディア情報などのように、不確定で可変サイズの非常に大きなデータオブジェクトを格納するときに使用することができます。また、Firebirdは、ほとんどのデータ型の配列もサポートしています。配列とは、単一のFirebirdのデータ型（BLOB を除く）で構成される各項目のマトリクスとなっています。配列は1 〜16の次元を設定できるようになっています。配列は、単一実体として処理または１項目ずつ操作できますが、SQL文では行うことができないのでAPIベースで処理を行う必要があります。
年，月，日，時刻についての情報を含むTIMESTAMPデータ型をサポートしています。TIMESTAMPデータ型は2つの 32ビット整数として格納されており、プログラムで入力または操作する場合は、Firebirdとの間で変換が必要です。DATE データ型には、年，月，日の情報が格納されます。TIMEデータ型には、時，分，秒，1/10 秒，1/100 秒、および1/1000秒単位で時刻についての情報が格納されます。表5-1-1は、Firebirdでサポートされているデータ型の一覧です。

表5-1-1.Firebirdのサポートしているデータ型
(table.xls内の表5-1-1)

各データ型についてもう少し個別にみてみましょう。

a)数値データ型
Firebirdがサポートする数値データ型には、有効桁数の整数（INTEGER，SMALLINT ）、可変有効桁数の浮動小数点数（FLOAT，DOUBLE PRECISION）、書式付き固定小数点数（DECIMAL，NUMERIC）があります。

整数データ型：
Firebirdでは、SMALLINTとINTEGERの2つの整数データ型を使用できます。SMALLINTは符号付き16ビット整数で、-32,768から32,767の範囲のデータを格納できます。INTEGERは符号付きの32ビット整数で、-2,147,483,648から2,147,483,647の範囲となっています。この2つの整数データ型は、どちらも高精度数値となっており、整数データ型では，次の演算を実行できます。

	・比較演算子（=, <, >, >=, <= ）を使った比較を行います。
	・CONTAINING ，STARTING WITH ，LIKE のような他の演算子は、数値で文字列の比較を行います。
	・算術演算： 算術演算子が複数の整数の加減乗除を決定します。
	・データ型の変換： 複数のデータ型で算術演算を行うとき、FirebirdはINTEGER，FLOAT，CHARデータ型の間で自動的に型変換を行います。数値データを他のデータ型と比較する演算では、Firebirdはまずそのデータを数値型に変換してから算術演算または比較を行います。
	・ソート： デフォルトでは、クエリーではテーブルの順序そのままでレコードを抽出しますが、これはおそらく順番には並んでいません。レコードは、SELECT文のORDER BY句を使い，、降順または昇順でソートできます。


固定小数点データ型：
Firebirdは、通貨値のような固定小数点を持つ数値データを処理するため、2 つのSQLデータ型，NUMERICとDECIMAL をサポートしています。どちらのデータ型でも、有効桁数と小数点以下の桁数を指定できます。この2つのデータ型は、高精度数値とも呼ばれます。

	・有効桁数（precision）は、これらのデータ型の列に含まれる最大合計桁数、つまり整数部と小数部の桁数の合計です。有効桁数に指定できる範囲は、1から18までです。
	・小数点以下の桁数小数点以下の（scale）は、数値の小数部となる小数点の右側の桁数です。小数点以下の桁数に指定できる範囲は 0から有効桁数まで、つまり小数点以下の桁数は有効桁数以下でなければなりません。


浮動小数点データ型：
Firebirdには、2つの浮動小数点データ型，FLOATとDOUBLE PRECISIONがあります。この2つのデータ型の違いはサイズだけです。FLOATは単精度の32ビットデータ型を指定し、有効桁数はおよそ7桁です。DOUBLE PRECISION は、倍精度の64ビットデータ型を指定し、有効桁数はおよそ15桁です。FLOATとDOUBLE PRECISIONの有効桁数はそのサイズに固定されますが、小数点以下の桁数は固定されないので、小数点以下の桁数の形式化を制御することはできません。浮動小数点データ型では，小数点の位置は変わります。小数点の位置は " 浮動" が可能です。
FLOAT，DOUBLE PRECISIONデータ型では、次の演算が可能です。
な他の演算子は，数値で文字列の比較を行います。
g
	・比較演算子（=, <, >, >=, <= ）を使った比較を行います。
	・CONTAINING ，STARTING WITH ，LIKE のような他の演算子は、数値で文字列の比較を行います。
	・算術演算： 算術演算子が複数の整数の加減乗除を決定します。
	・データ型の変換： 複数のデータ型で算術演算を行うとき、FirebirdはINTEGER，FLOAT，CHARデータ型の間で自動的に型変換を行います。数値データをCHARACTERやINTEGER型のような他のデータ型と比較する演算では、Firebirdはまずそのデータを数値型に変換してから、算術比較を行います。
	・ソート： デフォルトでは、クエリーではテーブルの順序そのままでレコードを抽出しますが、これはおそらく順番には並んでいません。レコードは、SELECT文のORDER BY句を使い，、降順または昇順でソートできます。


b)DATE，TIME，TIMESTAMPデータ型
Firebirdでは、DATE，TIME，およびTIMESTAMPデータ型がサポートされています。

	・DATEデータ型は、日付を32ビットのロングワードとして格納します。有効な日付は、西暦100年1月1日から32768年2月29日の範囲です。
	・TIMEは、時刻を32ビットのロングワードとして格納します。有効な日付は、00:00AMから23:59.9999PMの範囲です。
	・TIMESTAMPは、2つの32ビットロングワードとして格納され、DATEとTIMEを組み合わせたものです。

DATE，TIME，TIMESTAMPデータ型に値を格納するにはデータ型の変換が必要になります。これはたいていの言語は、DATE，TIMEおよびTIMESTAMPデータ型をサポートしておらず、日付や時刻を文字列または構造体として表します。これらのデータ型は、プログラムで入力または処理されたときにFirebirdとの間で変換が必要です。たとえばDATE型の場合は、Firebirdが認識できる形式の文字列（"1-JAN-1999" など）を作成します。日付をDATEフィールドに挿入すると、文字列は自動的に内部DATE形式に変換され、値を格納することができます。FirebirdのAPIを利用しても行うことは可能です。


c)文字データ型
Firebirdでは，次の 4 つの文字列データ型を使用できます。
	1. CHAR(n)，CHARACTER(n) ： 固定長文字データ型。nは格納されている正確な文字数
	2. VARCHAR(n)，CHARACTER VARYING(n) ： 可変長文字データ型。nは、文字列の最大文字数
	3. NCHAR(n)，NATIONAL CHARACTER(n)，NATIONAL CHAR(n) データ型。ISO8859_1キャラクタセットを使用する、n個の文字の固定長文字列
	4. NCHAR VARYING(n)，NATIONAL CHARACTER VARYING(n)またはNATIONAL CHARVARYING(n)データ型。ISO8859_1 キャラクタセットを使用する，最大n文字の可変長文字列
文字データ型を使用するときには、キャラクタセットの指定が必要となります。テーブルの作成時に各字データ型を指定されたフィールドにキャラクターセットを指定することができます。指定されないときはデータベースのデフォルトキャラクターセットが使用されます。また、コレーションオーダーを指定することで、使用しているキャラクターセットのサポートしているコレーションオーダーでデータを取得することができます。ただし、BLOB型ではコレーションオーダーの指定はできません。


d)BLOB型
Firebirdは、動的にサイズの変更が可能なBLOBデータ型をサポートしており、SQLの標準データ型には簡単に格納できないデータを格納することできます。BLOBには、ビットマップグラフィックイメージ、ベクター描画、サウンドファイル、ビデオセグメントやさまざまな長さの文書、あるいはその他のマルチメディア情報など、不確定で可変サイズの非常に大きなデータオブジェクトを格納することができます。BLOBはさまざまな種類の情報を記憶できるので、読み取り、書き込みには特殊な処理が必要となります。
FirebirdのBLOBにはサブタイプという概念があり、サブタイプを指定することでいろいろなタイプのデータを格納することができます。すでに用意されているサブタイプは表5-1-2の通りです。

表5-1-2.BLOBサブ対応
(Table.xls内の表5-1-2)

一般的に使われるのは0または1です。2以降は管理用に用意されているものです。また、マイナスの値(-1,-2など)はユーザー定義として使用することができます。このユーザー定義のサブタイプを活用することでBLOBフィルタという機能を使用することができます。
BLOBフィルタとはある特定のサブタイプのデータを他のサブタイプのデータに変換する機能です。たとえば、-1というサブタイプを指定し、BMP形式のデータを格納します。データとして取り出すときは常にJPEG形式で取り出したいとき、-2というサブタイプを指定してデータの取り出しが可能になります。BLOBフィルタを使用するには、自分で実装する必要があります。この実装方法については高度なプログラミングの知識が必要となります。
